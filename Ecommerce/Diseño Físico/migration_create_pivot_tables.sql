
USE ECOMMERCE_BUSINESS;

CREATE TABLE IF NOT EXISTS Product_Store (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    store_id INT UNSIGNED NOT NULL,
    product_id INT UNSIGNED NOT NULL,
    current_stock INT UNSIGNED,
    current_price INT UNSIGNED NULL,
    current_disccount INT UNSIGNED NULL,
    FOREIGN KEY (store_id) REFERENCES Stores(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Product_Images (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    store_id INT UNSIGNED NOT NULL,
    product_id INT UNSIGNED NOT NULL,
    is_featured tinyint UNSIGNED NOT NULL DEFAULT(0),
    url VARCHAR(255),
    FOREIGN KEY (product_id) REFERENCES Products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    FOREIGN KEY (store_id) REFERENCES Stores(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    INDEX(url)
);

CREATE TABLE IF NOT EXISTS Account_Address (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    account_id INT UNSIGNED NOT NULL,
    order_id INT UNSIGNED NOT NULL UNIQUE,
    street VARCHAR(255) NOT NULL,
    number_address int NOT NULL,
    unit VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    country VARCHAR(255) NOT NULL,
    state VARCHAR(255) NOT NULL,
    FOREIGN KEY (account_id) REFERENCES Accounts(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Address_Order (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    address_id INT UNSIGNED NOT NULL,
    order_id INT UNSIGNED NOT NULL UNIQUE,
    FOREIGN KEY (address_id) REFERENCES Account_Address(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    FOREIGN KEY (order_id) REFERENCES Orders(id)
    ON UPDATE CASCADE 
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Account_Order (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    account_id INT UNSIGNED NOT NULL,
    address_order_id INT UNSIGNED NOT NULL UNIQUE,
    FOREIGN KEY (account_id) REFERENCES Accounts(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    FOREIGN KEY (address_order_id) REFERENCES Address_Order(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS Order_Product (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    order_id INT UNSIGNED NOT NULL UNIQUE,
    product_id INT UNSIGNED NOT NULL,
    quantity INT UNSIGNED NOT NULL DEFAULT(0),
    FOREIGN KEY (order_id) REFERENCES Orders(id)
    ON UPDATE CASCADE 
    ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES Products(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Order_Store (
    id INT UNSIGNED AUTO_INCREMENT NOT NULL PRIMARY KEY,
    order_id INT UNSIGNED NOT NULL,
    store_id INT UNSIGNED NOT NULL,
    addres_order_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (order_id) REFERENCES Orders(id)
    ON UPDATE CASCADE 
    ON DELETE CASCADE,
    FOREIGN KEY (store_id) REFERENCES Stores(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    FOREIGN KEY (addres_order_id) REFERENCES Address_Order(id)
    ON UPDATE CASCADE
    ON DELETE CASCADE
);